{"version":3,"sources":["BooksAPI.js","Book.js","SearchBooks.js","BookShelf.js","ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","Book","state","changeShelf","event","setState","target","value","props","updateBookShelf","this","style","width","height","backgroundImage","imageLinks","thumbnail","className","onChange","disabled","title","authors","React","Component","SearchBooks","bookSearch","updateQuery","BooksAPI","length","to","type","placeholder","map","key","BookShelf","thisShelf","filter","name","BooksApp","b","concat","exact","path","render","ListBooks","ReactDOM","document","getElementById"],"mappings":"q0BACA,IAAMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACd,OAAU,mBACV,cAAiBN,GAaNO,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAM,GAAD,OAAIX,EAAJ,kBAAiBS,EAAKG,IAAM,CAC/BC,OAAQ,MACRN,QAAQ,EAAD,GACFA,EADE,CAEL,eAAgB,qBAElBO,KAAMC,KAAKC,UAAU,CAAEN,YACtBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAERC,EAAS,SAACC,GAAD,OACpBV,MAAM,GAAD,OAAIX,EAAJ,WAAkB,CACrBa,OAAQ,OACRN,QAAQ,EAAD,GACFA,EADE,CAEL,eAAgB,qBAElBO,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAK,GAAI,OAAIA,EAAKC,U,wBCeRC,E,2MAvDbC,MAAQ,CACNf,MAAO,Q,EAUTgB,YAAc,SAACC,GAEb,EAAKC,SAAS,CACZlB,MAAOiB,EAAME,OAAOC,QAItB,EAAKC,MAAMC,gBAAgB,EAAKD,MAAMtB,KAAMkB,EAAME,OAAOC,Q,mFAbzDG,KAAKL,SAAS,CACZlB,MAAOuB,KAAKF,MAAMtB,KAAKC,U,+BAejB,IACAD,EAASwB,KAAKF,MAAdtB,KACAC,EAAUuB,KAAKR,MAAff,MAGFwB,EAAQ,CACZC,MAAO,IACPC,OAAQ,IACRC,gBAAiB5B,EAAK6B,WAAL,cAAyB7B,EAAK6B,WAAWC,UAAzC,SAGnB,OACE,4BACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aAAaN,MAAOA,IACnC,yBAAKM,UAAU,sBACb,4BAAQV,MAAOpB,EAAO+B,SAAUR,KAAKP,aACnC,4BAAQI,MAAM,OAAOY,UAAQ,GAA7B,cACA,4BAAQZ,MAAM,oBAAd,qBACA,4BAAQA,MAAM,cAAd,gBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,WAIN,yBAAKU,UAAU,cAAc/B,EAAKkC,OAClC,yBAAKH,UAAU,gBAAgB/B,EAAKmC,QAAUnC,EAAKmC,QAAQvC,WAAa,U,GAjD/DwC,IAAMC,WC0DVC,E,2MAtDbtB,MAAQ,CACNJ,MAAO,GACP2B,WAAY,I,EAIdC,YAAc,SAAC5B,GACb,EAAKO,SAAS,CACZP,MAAOA,IAKLA,GACF6B,EAAgB7B,GAAOJ,MAAK,SAACM,GACvBA,EAAM4B,OACR,EAAKvB,SAAS,CACZoB,WAAYzB,IAGd,EAAKK,SAAS,CACZoB,WAAY,S,wEAOZ,IAAD,SACuBf,KAAKR,MAA3BJ,EADD,EACCA,MAAO2B,EADR,EACQA,WACPhB,EAAoBC,KAAKF,MAAzBC,gBAER,OACE,yBAAKQ,UAAU,gBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMA,UAAU,eAAeY,GAAG,KAAlC,SACA,yBAAKZ,UAAU,8BACb,2BAAOa,KAAK,OACVC,YAAY,4BACZxB,MAAOT,EACPoB,SAAU,SAACd,GAAD,OAAW,EAAKsB,YAAYtB,EAAME,OAAOC,YAIzD,yBAAKU,UAAU,wBACb,wBAAIA,UAAU,cACXQ,EAAWO,KAAI,SAAA9C,GAAI,OAAK,kBAAC,EAAD,CAAM+C,IAAK/C,EAAKG,GAAIH,KAAMA,EAAMuB,gBAAiBA,c,GA/C5Da,IAAMC,WCiBjBW,E,iLAhBH,IAAD,EACuCxB,KAAKF,MAA3C2B,EADD,EACCA,UAAWnC,EADZ,EACYA,MAAOS,EADnB,EACmBA,gBAE1B,OACE,yBAAKQ,UAAU,aACb,wBAAIA,UAAU,mBAAmBkB,EAAUf,OAC3C,yBAAKH,UAAU,mBACb,wBAAIA,UAAU,cACbjB,EAAMoC,QAAO,SAAAlD,GAAI,OAAIA,EAAKC,QAAUgD,EAAUE,QAAML,KAAI,SAAA9C,GAAI,OAAK,kBAAC,EAAD,CAAM+C,IAAK/C,EAAKG,GAAIH,KAAMA,EAAMuB,gBAAiBA,c,GAVrGa,IAAMC,WC6BfC,E,iLA3BH,IAAD,EAC4Bd,KAAKF,MAAhCR,EADD,EACCA,MAAOS,EADR,EACQA,gBAQf,OACE,yBAAKQ,UAAU,cACb,yBAAKA,UAAU,oBACb,wCAEF,yBAAKA,UAAU,sBACb,6BAZU,CACd,CAACG,MAAO,oBAAqBiB,KAAM,oBACnC,CAACjB,MAAO,eAAgBiB,KAAM,cAC9B,CAACjB,MAAO,OAAQiB,KAAM,SAUPL,KAAI,SAAAG,GAAS,OAAK,kBAAC,EAAD,CAAWF,IAAKE,EAAUE,KAAMF,UAAWA,EAAWnC,MAAOA,EAAOS,gBAAiBA,SAGpH,yBAAKQ,UAAU,eACb,kBAAC,IAAD,CAAMY,GAAG,UAAT,oB,GAtBgBP,IAAMC,WC0CjBe,E,2MAtCbpC,MAAQ,CACNF,MAAO,I,EAYTS,gBAAkB,SAACvB,EAAMC,GACvBwC,EAAgBzC,EAAMC,GAAOO,MAAK,WAChCR,EAAKC,MAAQA,EACb,EAAKkB,UAAS,SAAAH,GAAK,MAAK,CACtBF,MAAOE,EAAMF,MAAMoC,QAAO,SAAAG,GAAC,OAAIA,EAAElD,KAAOH,EAAKG,MAAImD,OAAO,CAACtD,Y,mFAZ1C,IAAD,OLOpBE,MAAM,GAAD,OAAIX,EAAJ,UAAiB,CAAEO,YACrBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAK,GAAI,OAAIA,EAAKC,SKRDN,MAAK,SAACM,GACtB,EAAKK,SAAS,CAAEL,e,+BAeV,IAAD,OACCA,EAAUU,KAAKR,MAAfF,MAER,OACE,yBAAKiB,UAAU,OACb,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAClC,kBAAC,EAAD,CAAa3C,MAAOA,EAAOS,gBAAiB,EAAKA,qBAEnD,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,kBAACC,EAAD,CAAW5C,MAAOA,EAAOS,gBAAiB,EAAKA,0B,GAhClCa,IAAMC,W,MCD7BsB,IAASF,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.2f6ee91d.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\n\nclass Book extends React.Component {\n  state = {\n    shelf: 'none'\n  }\n\n  componentDidMount() {\n    this.setState({\n      shelf: this.props.book.shelf\n    })\n  }\n\n  //set the state of the shelf to the current shelf\n  changeShelf = (event) => {\n    //set the state to selected shelf\n    this.setState({\n      shelf: event.target.value\n    })\n\n    //pass the new state as an argument to updateBookShelf function\n    this.props.updateBookShelf(this.props.book, event.target.value)\n  }\n\n  render() {\n    const { book } = this.props\n    const { shelf } = this.state\n\n    //style for the book image\n    const style = {\n      width: 128,\n      height: 193,\n      backgroundImage: book.imageLinks ? `url(${book.imageLinks.thumbnail})` : ``\n    }\n\n    return (\n      <li>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={style}></div>\n            <div className=\"book-shelf-changer\">\n              <select value={shelf} onChange={this.changeShelf}>\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{book.title}</div>\n          <div className=\"book-authors\">{book.authors ? book.authors.toString() : ''}</div>\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default Book","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Link } from 'react-router-dom'\nimport Book from './Book'\n\nclass SearchBooks extends React.Component {\n  state = {\n    query: '',\n    bookSearch: []\n  }\n\n  //update search to match the input\n  updateQuery = (query) => {\n    this.setState({\n      query: query\n    })\n\n    //show matching books form API\n    //if search field has input\n    if (query) {\n      BooksAPI.search(query).then((books) => {\n        if (books.length) {\n          this.setState({\n            bookSearch: books\n          })\n        } else {\n          this.setState({\n            bookSearch: []\n          })\n        }\n      })\n    }\n  }\n\n  render() {\n    const { query, bookSearch } = this.state\n    const { updateBookShelf } = this.props\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">Close</Link>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {bookSearch.map(book => (<Book key={book.id} book={book} updateBookShelf={updateBookShelf}/>))}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBooks\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport Book from './Book'\n\nclass BookShelf extends React.Component {\n\n  render() {\n    const { thisShelf, books, updateBookShelf } = this.props\n\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{thisShelf.title}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n          {books.filter(book => book.shelf === thisShelf.name).map(book => (<Book key={book.id} book={book} updateBookShelf={updateBookShelf}/>))}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BookShelf","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BookShelf from './BookShelf'\n\nclass SearchBooks extends React.Component {\n\n  render() {\n    const { books, updateBookShelf } = this.props\n\n    const shelves = [\n      {title: 'Currently Reading', name: 'currentlyReading'},\n      {title: 'Want to Read', name: 'wantToRead'},\n      {title: 'Read', name: 'read'}\n    ]\n\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            {shelves.map(thisShelf => (<BookShelf key={thisShelf.name} thisShelf={thisShelf} books={books} updateBookShelf={updateBookShelf}/>))}\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"search\">Add a book</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBooks","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport './App.css'\nimport SearchBooks from './SearchBooks'\nimport ListBooks from './ListBooks'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n\n  //fetch books from the API\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books })\n    })\n  }\n\n  //udate shelf to current shelf in the API\n  //set the state of the book to current shelf\n  updateBookShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then(() => {\n      book.shelf = shelf\n      this.setState(state => ({\n        books: state.books.filter(b => b.id !== book.id).concat([book])\n      }))\n    })\n  }\n\n  render() {\n    const { books } = this.state\n\n    return (\n      <div className=\"app\">\n        <Route exact path=\"/search\" render={() => (\n          <SearchBooks books={books} updateBookShelf={this.updateBookShelf}/>\n          )}/>\n        <Route exact path=\"/\" render={() => (\n          <ListBooks books={books} updateBookShelf={this.updateBookShelf}/>\n          )}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'))"],"sourceRoot":""}